{"id":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","dependencies":[{"name":"C:\\Users\\brett\\Desktop\\encode files\\aurum_wallet\\package.json","includedInParent":true,"mtime":1610473604000},{"name":"C:\\Users\\brett\\Desktop\\encode files\\aurum_wallet\\node_modules\\@polkadot\\util-crypto\\package.json","includedInParent":true,"mtime":1610722452654},{"name":"@polkadot/util","loc":{"line":3,"column":23},"parent":"C:\\Users\\brett\\Desktop\\encode files\\aurum_wallet\\node_modules\\@polkadot\\util-crypto\\secp256k1\\compress.mjs","resolved":"C:\\Users\\brett\\Desktop\\encode files\\aurum_wallet\\node_modules\\@polkadot\\util\\index.mjs"},{"name":"./secp256k1.mjs","loc":{"line":4,"column":26},"parent":"C:\\Users\\brett\\Desktop\\encode files\\aurum_wallet\\node_modules\\@polkadot\\util-crypto\\secp256k1\\compress.mjs","resolved":"C:\\Users\\brett\\Desktop\\encode files\\aurum_wallet\\node_modules\\@polkadot\\util-crypto\\secp256k1\\secp256k1.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.secp256k1Compress = secp256k1Compress;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _secp256k = require(\"./secp256k1.mjs\");\n\n// Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction secp256k1Compress(publicKey) {\n  (0, _util.assert)([33, 65].includes(publicKey.length), 'Invalid publicKey provided');\n  return new Uint8Array(_secp256k.secp256k1.keyFromPublic(publicKey).getPublic().encodeCompressed());\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":1,"column":0}},{"generated":{"line":13,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":5,"column":7}},{"name":"secp256k1Compress","generated":{"line":14,"column":9},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":5,"column":16}},{"generated":{"line":14,"column":26},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":5,"column":7}},{"name":"publicKey","generated":{"line":14,"column":27},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":5,"column":34}},{"generated":{"line":14,"column":36},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":5,"column":7}},{"generated":{"line":14,"column":38},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":5,"column":45}},{"generated":{"line":15,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":6,"column":2}},{"generated":{"line":15,"column":20},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":6,"column":9}},{"generated":{"line":15,"column":21},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":6,"column":10}},{"generated":{"line":15,"column":23},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":6,"column":9}},{"generated":{"line":15,"column":25},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":6,"column":14}},{"generated":{"line":15,"column":27},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":6,"column":9}},{"name":"includes","generated":{"line":15,"column":29},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":6,"column":18}},{"generated":{"line":15,"column":37},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":6,"column":9}},{"name":"publicKey","generated":{"line":15,"column":38},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":6,"column":27}},{"generated":{"line":15,"column":47},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":6,"column":36}},{"name":"length","generated":{"line":15,"column":48},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":6,"column":37}},{"generated":{"line":15,"column":54},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":6,"column":9}},{"generated":{"line":15,"column":55},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":6,"column":2}},{"generated":{"line":15,"column":57},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":6,"column":46}},{"generated":{"line":15,"column":85},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":6,"column":2}},{"generated":{"line":16,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":7,"column":2}},{"generated":{"line":16,"column":9},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":7,"column":9}},{"name":"Uint8Array","generated":{"line":16,"column":13},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":7,"column":13}},{"generated":{"line":16,"column":23},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":7,"column":9}},{"name":"secp256k1","generated":{"line":16,"column":24},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":7,"column":24}},{"name":"keyFromPublic","generated":{"line":16,"column":44},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":7,"column":34}},{"generated":{"line":16,"column":57},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":7,"column":24}},{"name":"publicKey","generated":{"line":16,"column":58},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":7,"column":48}},{"generated":{"line":16,"column":67},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":7,"column":24}},{"name":"getPublic","generated":{"line":16,"column":69},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":7,"column":59}},{"generated":{"line":16,"column":78},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":7,"column":24}},{"name":"encodeCompressed","generated":{"line":16,"column":81},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":7,"column":71}},{"generated":{"line":16,"column":97},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":7,"column":24}},{"generated":{"line":16,"column":99},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":7,"column":9}},{"generated":{"line":16,"column":100},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":7,"column":2}},{"generated":{"line":17,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs","original":{"line":8,"column":1}}],"sources":{"../../../node_modules/@polkadot/util-crypto/secp256k1/compress.mjs":"// Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert } from '@polkadot/util';\nimport { secp256k1 } from \"./secp256k1.mjs\";\nexport function secp256k1Compress(publicKey) {\n  assert([33, 65].includes(publicKey.length), 'Invalid publicKey provided');\n  return new Uint8Array(secp256k1.keyFromPublic(publicKey).getPublic().encodeCompressed());\n}"},"lineCount":null}},"error":null,"hash":"9ace1f148575de3f3da9f936b090feb9","cacheData":{"env":{}}}