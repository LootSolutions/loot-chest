{"id":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","dependencies":[{"name":"/home/brettkolodny/Workspace/hackathons/encode/aurum_wallet/package.json","includedInParent":true,"mtime":1610473604917},{"name":"/home/brettkolodny/Workspace/hackathons/encode/aurum_wallet/node_modules/@polkadot/util-crypto/package.json","includedInParent":true,"mtime":1609884616560},{"name":"@polkadot/util","loc":{"line":3,"column":28},"parent":"/home/brettkolodny/Workspace/hackathons/encode/aurum_wallet/node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","resolved":"/home/brettkolodny/Workspace/hackathons/encode/aurum_wallet/node_modules/@polkadot/util/index.mjs"},{"name":"../../blake2/asU8a.mjs","loc":{"line":4,"column":28},"parent":"/home/brettkolodny/Workspace/hackathons/encode/aurum_wallet/node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","resolved":"/home/brettkolodny/Workspace/hackathons/encode/aurum_wallet/node_modules/@polkadot/util-crypto/blake2/asU8a.mjs"},{"name":"./fromSeed.mjs","loc":{"line":5,"column":36},"parent":"/home/brettkolodny/Workspace/hackathons/encode/aurum_wallet/node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","resolved":"/home/brettkolodny/Workspace/hackathons/encode/aurum_wallet/node_modules/@polkadot/util-crypto/nacl/keypair/fromSeed.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.naclKeypairFromString = naclKeypairFromString;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _asU8a = require(\"../../blake2/asU8a.mjs\");\n\nvar _fromSeed = require(\"./fromSeed.mjs\");\n\n// Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name naclKeypairFromString\n * @summary Creates a new public/secret keypair from a string.\n * @description\n * Returns a object containing a `publicKey` & `secretKey` generated from the supplied string. The string is hashed and the value used as the input seed.\n * @example\n * <BR>\n *\n * ```javascript\n * import { naclKeypairFromString } from '@polkadot/util-crypto';\n *\n * naclKeypairFromString('test'); // => { secretKey: [...], publicKey: [...] }\n * ```\n */\nfunction naclKeypairFromString(value) {\n  return (0, _fromSeed.naclKeypairFromSeed)((0, _asU8a.blake2AsU8a)((0, _util.stringToU8a)(value), 256));\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":5,"column":0}},{"generated":{"line":14,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":1,"column":0}},{"generated":{"line":15,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":2,"column":0}},{"generated":{"line":17,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":6,"column":0}},{"generated":{"line":18,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":7,"column":0}},{"generated":{"line":19,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":8,"column":0}},{"generated":{"line":20,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":9,"column":0}},{"generated":{"line":21,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":10,"column":0}},{"generated":{"line":22,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":11,"column":0}},{"generated":{"line":23,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":12,"column":0}},{"generated":{"line":24,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":13,"column":0}},{"generated":{"line":25,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":14,"column":0}},{"generated":{"line":26,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":15,"column":0}},{"generated":{"line":27,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":16,"column":0}},{"generated":{"line":28,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":17,"column":0}},{"generated":{"line":29,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":18,"column":0}},{"generated":{"line":30,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":19,"column":0}},{"generated":{"line":31,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":21,"column":7}},{"name":"naclKeypairFromString","generated":{"line":31,"column":9},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":21,"column":16}},{"generated":{"line":31,"column":30},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":21,"column":7}},{"name":"value","generated":{"line":31,"column":31},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":21,"column":38}},{"generated":{"line":31,"column":36},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":21,"column":7}},{"generated":{"line":31,"column":38},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":21,"column":45}},{"generated":{"line":32,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":22,"column":2}},{"generated":{"line":32,"column":9},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":22,"column":9}},{"generated":{"line":32,"column":44},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":22,"column":29}},{"generated":{"line":32,"column":68},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":22,"column":41}},{"name":"value","generated":{"line":32,"column":91},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":22,"column":53}},{"generated":{"line":32,"column":96},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":22,"column":41}},{"generated":{"line":32,"column":97},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":22,"column":29}},{"generated":{"line":32,"column":99},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":22,"column":61}},{"generated":{"line":32,"column":102},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":22,"column":29}},{"generated":{"line":32,"column":103},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":22,"column":9}},{"generated":{"line":32,"column":104},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":22,"column":2}},{"generated":{"line":33,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs","original":{"line":23,"column":1}}],"sources":{"../../../node_modules/@polkadot/util-crypto/nacl/keypair/fromString.mjs":"// Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { stringToU8a } from '@polkadot/util';\nimport { blake2AsU8a } from \"../../blake2/asU8a.mjs\";\nimport { naclKeypairFromSeed } from \"./fromSeed.mjs\";\n/**\n * @name naclKeypairFromString\n * @summary Creates a new public/secret keypair from a string.\n * @description\n * Returns a object containing a `publicKey` & `secretKey` generated from the supplied string. The string is hashed and the value used as the input seed.\n * @example\n * <BR>\n *\n * ```javascript\n * import { naclKeypairFromString } from '@polkadot/util-crypto';\n *\n * naclKeypairFromString('test'); // => { secretKey: [...], publicKey: [...] }\n * ```\n */\n\nexport function naclKeypairFromString(value) {\n  return naclKeypairFromSeed(blake2AsU8a(stringToU8a(value), 256));\n}"},"lineCount":null}},"error":null,"hash":"86707813f5475194c681e18a4b88cc2f","cacheData":{"env":{}}}