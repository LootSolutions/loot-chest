{"id":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","dependencies":[{"name":"C:\\Users\\brett\\Workspace\\hackathon\\encode\\aurum_wallet\\package.json","includedInParent":true,"mtime":1610473604000},{"name":"C:\\Users\\brett\\Workspace\\hackathon\\encode\\aurum_wallet\\node_modules\\@polkadot\\util-crypto\\package.json","includedInParent":true,"mtime":1610722452654},{"name":"@polkadot/util","loc":{"line":3,"column":23},"parent":"C:\\Users\\brett\\Workspace\\hackathon\\encode\\aurum_wallet\\node_modules\\@polkadot\\util-crypto\\base64\\validate.mjs","resolved":"C:\\Users\\brett\\Workspace\\hackathon\\encode\\aurum_wallet\\node_modules\\@polkadot\\util\\index.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.base64Validate = base64Validate;\n\nvar _util = require(\"@polkadot/util\");\n\n// Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name base64Validate\n * @summary Validates a base64 value.\n * @description\n * Validates the the supplied value is valid base64\n */\nfunction base64Validate(value) {\n  (0, _util.assert)(value, 'Expected non-null, non-empty base64 input');\n  (0, _util.assert)(/^(?:[A-Za-z0-9+/]{2}[A-Za-z0-9+/]{2})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(value), 'Invalid base64 encoding');\n  return true;\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":2,"column":0}},{"generated":{"line":13,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":4,"column":0}},{"generated":{"line":14,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":5,"column":0}},{"generated":{"line":15,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":6,"column":0}},{"generated":{"line":16,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":7,"column":0}},{"generated":{"line":17,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":8,"column":0}},{"generated":{"line":18,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":9,"column":0}},{"generated":{"line":19,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":11,"column":7}},{"name":"base64Validate","generated":{"line":19,"column":9},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":11,"column":16}},{"generated":{"line":19,"column":23},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":11,"column":7}},{"name":"value","generated":{"line":19,"column":24},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":11,"column":31}},{"generated":{"line":19,"column":29},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":11,"column":7}},{"generated":{"line":19,"column":31},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":11,"column":38}},{"generated":{"line":20,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":12,"column":2}},{"name":"value","generated":{"line":20,"column":20},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":12,"column":9}},{"generated":{"line":20,"column":25},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":12,"column":2}},{"generated":{"line":20,"column":27},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":12,"column":16}},{"generated":{"line":20,"column":70},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":12,"column":2}},{"generated":{"line":21,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":13,"column":2}},{"generated":{"line":21,"column":20},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":13,"column":9}},{"name":"test","generated":{"line":21,"column":103},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":13,"column":92}},{"generated":{"line":21,"column":107},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":13,"column":9}},{"name":"value","generated":{"line":21,"column":108},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":13,"column":97}},{"generated":{"line":21,"column":113},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":13,"column":9}},{"generated":{"line":21,"column":114},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":13,"column":2}},{"generated":{"line":21,"column":116},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":13,"column":105}},{"generated":{"line":21,"column":141},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":13,"column":2}},{"generated":{"line":22,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":14,"column":2}},{"generated":{"line":22,"column":9},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":14,"column":9}},{"generated":{"line":22,"column":13},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":14,"column":2}},{"generated":{"line":23,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs","original":{"line":15,"column":1}}],"sources":{"../../../node_modules/@polkadot/util-crypto/base64/validate.mjs":"// Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert } from '@polkadot/util';\n/**\n * @name base64Validate\n * @summary Validates a base64 value.\n * @description\n * Validates the the supplied value is valid base64\n */\n\nexport function base64Validate(value) {\n  assert(value, 'Expected non-null, non-empty base64 input');\n  assert(/^(?:[A-Za-z0-9+/]{2}[A-Za-z0-9+/]{2})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(value), 'Invalid base64 encoding');\n  return true;\n}"},"lineCount":null}},"error":null,"hash":"16b6b305820f1e813617c751c7160115","cacheData":{"env":{}}}