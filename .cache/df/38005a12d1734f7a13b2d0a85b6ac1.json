{"id":"../../../node_modules/@polkadot/util-crypto/detectPackage.mjs","dependencies":[{"name":"/home/brettkolodny/Workspace/hackathons/encode/aurum_wallet/package.json","includedInParent":true,"mtime":1610473604917},{"name":"/home/brettkolodny/Workspace/hackathons/encode/aurum_wallet/node_modules/@polkadot/util-crypto/package.json","includedInParent":true,"mtime":1609884616560},{"name":"@polkadot/util","loc":{"line":17,"column":30},"parent":"/home/brettkolodny/Workspace/hackathons/encode/aurum_wallet/node_modules/@polkadot/util-crypto/detectPackage.mjs","resolved":"/home/brettkolodny/Workspace/hackathons/encode/aurum_wallet/node_modules/@polkadot/util/index.mjs"},{"name":"./package-info.json","loc":{"line":18,"column":24},"parent":"/home/brettkolodny/Workspace/hackathons/encode/aurum_wallet/node_modules/@polkadot/util-crypto/detectPackage.mjs","resolved":"/home/brettkolodny/Workspace/hackathons/encode/aurum_wallet/node_modules/@polkadot/util-crypto/package-info.json"}],"generated":{"js":"var __dirname = \"/home/brettkolodny/Workspace/hackathons/encode/aurum_wallet/node_modules/@polkadot/util-crypto\";\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"packageInfo\", {\n  enumerable: true,\n  get: function () {\n    return _packageInfo.default;\n  }\n});\n\nvar _util = require(\"@polkadot/util\");\n\nvar _packageInfo = _interopRequireDefault(require(\"./package-info.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// For esm, this should be import.meta.url or to get the same behavior as __dirname, we can use\n//\n//   new URL(import.meta.url).pathname)\n//\n// The issue is the WP4 has \"some\" issues with import.meta.url. So because of bundlers, we can't have\n// nice things... In this case it is even worse since import.meta.url won't even make it compile, so\n// there is a complete dead end with usage thereof\n//\n// When that is fixed, a solution is to have both .js & .mjs files, with the following content -\n//\n// cjs: util.detectPackage(packageInfo, () => __dirname);\n// esm: detectPackage(packageInfo, () => import.meta.url);\n//\n// With the above we additionally need a .d.ts to just export the packageInfo\n(0, _util.detectPackage)(_packageInfo.default, typeof __dirname !== 'undefined' && __dirname);"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":14,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/detectPackage.mjs","original":{"line":17,"column":0}},{"generated":{"line":16,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/detectPackage.mjs","original":{"line":18,"column":0}},{"generated":{"line":20,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/detectPackage.mjs","original":{"line":1,"column":0}},{"generated":{"line":21,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/detectPackage.mjs","original":{"line":2,"column":0}},{"generated":{"line":22,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/detectPackage.mjs","original":{"line":3,"column":0}},{"generated":{"line":23,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/detectPackage.mjs","original":{"line":4,"column":0}},{"generated":{"line":24,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/detectPackage.mjs","original":{"line":5,"column":0}},{"generated":{"line":25,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/detectPackage.mjs","original":{"line":6,"column":0}},{"generated":{"line":26,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/detectPackage.mjs","original":{"line":7,"column":0}},{"generated":{"line":27,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/detectPackage.mjs","original":{"line":8,"column":0}},{"generated":{"line":28,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/detectPackage.mjs","original":{"line":9,"column":0}},{"generated":{"line":29,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/detectPackage.mjs","original":{"line":10,"column":0}},{"generated":{"line":30,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/detectPackage.mjs","original":{"line":11,"column":0}},{"generated":{"line":31,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/detectPackage.mjs","original":{"line":12,"column":0}},{"generated":{"line":32,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/detectPackage.mjs","original":{"line":13,"column":0}},{"generated":{"line":33,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/detectPackage.mjs","original":{"line":14,"column":0}},{"generated":{"line":34,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/detectPackage.mjs","original":{"line":15,"column":0}},{"generated":{"line":35,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/detectPackage.mjs","original":{"line":16,"column":0}},{"generated":{"line":36,"column":0},"source":"../../../node_modules/@polkadot/util-crypto/detectPackage.mjs","original":{"line":19,"column":0}},{"name":"packageInfo","generated":{"line":36,"column":25},"source":"../../../node_modules/@polkadot/util-crypto/detectPackage.mjs","original":{"line":19,"column":14}},{"generated":{"line":36,"column":45},"source":"../../../node_modules/@polkadot/util-crypto/detectPackage.mjs","original":{"line":19,"column":0}},{"generated":{"line":36,"column":47},"source":"../../../node_modules/@polkadot/util-crypto/detectPackage.mjs","original":{"line":19,"column":27}},{"name":"__dirname","generated":{"line":36,"column":54},"source":"../../../node_modules/@polkadot/util-crypto/detectPackage.mjs","original":{"line":19,"column":34}},{"generated":{"line":36,"column":63},"source":"../../../node_modules/@polkadot/util-crypto/detectPackage.mjs","original":{"line":19,"column":27}},{"generated":{"line":36,"column":68},"source":"../../../node_modules/@polkadot/util-crypto/detectPackage.mjs","original":{"line":19,"column":48}},{"generated":{"line":36,"column":79},"source":"../../../node_modules/@polkadot/util-crypto/detectPackage.mjs","original":{"line":19,"column":27}},{"name":"__dirname","generated":{"line":36,"column":83},"source":"../../../node_modules/@polkadot/util-crypto/detectPackage.mjs","original":{"line":19,"column":63}},{"generated":{"line":36,"column":92},"source":"../../../node_modules/@polkadot/util-crypto/detectPackage.mjs","original":{"line":19,"column":0}}],"sources":{"../../../node_modules/@polkadot/util-crypto/detectPackage.mjs":"// Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// For esm, this should be import.meta.url or to get the same behavior as __dirname, we can use\n//\n//   new URL(import.meta.url).pathname)\n//\n// The issue is the WP4 has \"some\" issues with import.meta.url. So because of bundlers, we can't have\n// nice things... In this case it is even worse since import.meta.url won't even make it compile, so\n// there is a complete dead end with usage thereof\n//\n// When that is fixed, a solution is to have both .js & .mjs files, with the following content -\n//\n// cjs: util.detectPackage(packageInfo, () => __dirname);\n// esm: detectPackage(packageInfo, () => import.meta.url);\n//\n// With the above we additionally need a .d.ts to just export the packageInfo\nimport { detectPackage } from '@polkadot/util';\nimport packageInfo from \"./package-info.json\";\ndetectPackage(packageInfo, typeof __dirname !== 'undefined' && __dirname);\nexport { packageInfo };"},"lineCount":null}},"error":null,"hash":"d154634123676ab9628bf41476633a21","cacheData":{"env":{}}}