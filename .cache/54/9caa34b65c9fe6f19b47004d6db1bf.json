{"id":"../../../node_modules/@polkadot/util/is/ascii.mjs","dependencies":[{"name":"C:\\Users\\brett\\Desktop\\encode files\\aurum_wallet\\package.json","includedInParent":true,"mtime":1610473604000},{"name":"C:\\Users\\brett\\Desktop\\encode files\\aurum_wallet\\node_modules\\@polkadot\\util\\package.json","includedInParent":true,"mtime":1610722452294},{"name":"../u8a/toU8a.mjs","loc":{"line":3,"column":25},"parent":"C:\\Users\\brett\\Desktop\\encode files\\aurum_wallet\\node_modules\\@polkadot\\util\\is\\ascii.mjs","resolved":"C:\\Users\\brett\\Desktop\\encode files\\aurum_wallet\\node_modules\\@polkadot\\util\\u8a\\toU8a.mjs"},{"name":"./string.mjs","loc":{"line":4,"column":25},"parent":"C:\\Users\\brett\\Desktop\\encode files\\aurum_wallet\\node_modules\\@polkadot\\util\\is\\ascii.mjs","resolved":"C:\\Users\\brett\\Desktop\\encode files\\aurum_wallet\\node_modules\\@polkadot\\util\\is\\string.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isAscii = isAscii;\n\nvar _toU8a = require(\"../u8a/toU8a.mjs\");\n\nvar _string = require(\"./string.mjs\");\n\n// Copyright 2017-2020 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst FORMAT = [9, 10, 13];\n/**\n * @name isAscii\n * @summary Tests if the input is printable ASCII\n * @description\n * Checks to see if the input string or Uint8Array is printable ASCII, 32-127 + formatters\n */\n\nfunction isAscii(value) {\n  return value ? !(0, _toU8a.u8aToU8a)(value).some(byte => byte >= 127 || byte < 32 && !FORMAT.includes(byte)) : (0, _string.isString)(value);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":1,"column":0}},{"generated":{"line":13,"column":0},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":5,"column":0}},{"name":"FORMAT","generated":{"line":14,"column":6},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":5,"column":6}},{"generated":{"line":14,"column":12},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":5,"column":12}},{"generated":{"line":14,"column":15},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":5,"column":15}},{"generated":{"line":14,"column":16},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":5,"column":16}},{"generated":{"line":14,"column":17},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":5,"column":15}},{"generated":{"line":14,"column":19},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":5,"column":19}},{"generated":{"line":14,"column":21},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":5,"column":15}},{"generated":{"line":14,"column":23},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":5,"column":23}},{"generated":{"line":14,"column":25},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":5,"column":15}},{"generated":{"line":14,"column":26},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":5,"column":0}},{"generated":{"line":15,"column":0},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":6,"column":0}},{"generated":{"line":16,"column":0},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":7,"column":0}},{"generated":{"line":17,"column":0},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":8,"column":0}},{"generated":{"line":18,"column":0},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":9,"column":0}},{"generated":{"line":19,"column":0},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":10,"column":0}},{"generated":{"line":20,"column":0},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":11,"column":0}},{"generated":{"line":22,"column":0},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":13,"column":7}},{"name":"isAscii","generated":{"line":22,"column":9},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":13,"column":16}},{"generated":{"line":22,"column":16},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":13,"column":7}},{"name":"value","generated":{"line":22,"column":17},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":13,"column":24}},{"generated":{"line":22,"column":22},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":13,"column":7}},{"generated":{"line":22,"column":24},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":13,"column":31}},{"generated":{"line":23,"column":0},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":14,"column":2}},{"name":"value","generated":{"line":23,"column":9},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":14,"column":9}},{"generated":{"line":23,"column":14},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":14,"column":14}},{"generated":{"line":23,"column":17},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":14,"column":17}},{"generated":{"line":23,"column":18},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":14,"column":18}},{"name":"value","generated":{"line":23,"column":39},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":14,"column":27}},{"generated":{"line":23,"column":44},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":14,"column":18}},{"name":"some","generated":{"line":23,"column":46},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":14,"column":34}},{"generated":{"line":23,"column":50},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":14,"column":18}},{"name":"byte","generated":{"line":23,"column":51},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":14,"column":39}},{"generated":{"line":23,"column":55},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":14,"column":43}},{"name":"byte","generated":{"line":23,"column":59},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":14,"column":47}},{"generated":{"line":23,"column":63},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":14,"column":51}},{"generated":{"line":23,"column":67},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":14,"column":55}},{"generated":{"line":23,"column":70},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":14,"column":47}},{"name":"byte","generated":{"line":23,"column":74},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":14,"column":62}},{"generated":{"line":23,"column":78},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":14,"column":66}},{"generated":{"line":23,"column":81},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":14,"column":69}},{"generated":{"line":23,"column":83},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":14,"column":62}},{"generated":{"line":23,"column":87},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":14,"column":75}},{"name":"FORMAT","generated":{"line":23,"column":88},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":14,"column":76}},{"generated":{"line":23,"column":94},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":14,"column":82}},{"name":"includes","generated":{"line":23,"column":95},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":14,"column":83}},{"generated":{"line":23,"column":103},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":14,"column":76}},{"name":"byte","generated":{"line":23,"column":104},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":14,"column":92}},{"generated":{"line":23,"column":108},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":14,"column":76}},{"generated":{"line":23,"column":109},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":14,"column":18}},{"generated":{"line":23,"column":110},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":14,"column":14}},{"generated":{"line":23,"column":113},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":14,"column":101}},{"name":"value","generated":{"line":23,"column":135},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":14,"column":110}},{"generated":{"line":23,"column":140},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":14,"column":101}},{"generated":{"line":23,"column":141},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":14,"column":2}},{"generated":{"line":24,"column":0},"source":"../../../node_modules/@polkadot/util/is/ascii.mjs","original":{"line":15,"column":1}}],"sources":{"../../../node_modules/@polkadot/util/is/ascii.mjs":"// Copyright 2017-2020 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aToU8a } from \"../u8a/toU8a.mjs\";\nimport { isString } from \"./string.mjs\";\nconst FORMAT = [9, 10, 13];\n/**\n * @name isAscii\n * @summary Tests if the input is printable ASCII\n * @description\n * Checks to see if the input string or Uint8Array is printable ASCII, 32-127 + formatters\n */\n\nexport function isAscii(value) {\n  return value ? !u8aToU8a(value).some(byte => byte >= 127 || byte < 32 && !FORMAT.includes(byte)) : isString(value);\n}"},"lineCount":null}},"error":null,"hash":"d9425ab10f806a5dade0559436ea3105","cacheData":{"env":{}}}