{"id":"../../../node_modules/cuint/lib/uint32.js","dependencies":[{"name":"C:\\Users\\brett\\Desktop\\encode files\\aurum_wallet\\package.json","includedInParent":true,"mtime":1610473604000},{"name":"C:\\Users\\brett\\Desktop\\encode files\\aurum_wallet\\node_modules\\cuint\\package.json","includedInParent":true,"mtime":1610722454056}],"generated":{"js":"var define;\n/**\n\tC-like unsigned 32 bits integers in Javascript\n\tCopyright (C) 2013, Pierre Curto\n\tMIT license\n */\n;(function (root) {\n\n\t// Local cache for typical radices\n\tvar radixPowerCache = {\n\t\t36: UINT32( Math.pow(36, 5) )\n\t,\t16: UINT32( Math.pow(16, 7) )\n\t,\t10: UINT32( Math.pow(10, 9) )\n\t,\t2:  UINT32( Math.pow(2, 30) )\n\t}\n\tvar radixCache = {\n\t\t36: UINT32(36)\n\t,\t16: UINT32(16)\n\t,\t10: UINT32(10)\n\t,\t2:  UINT32(2)\n\t}\n\n\t/**\n\t *\tRepresents an unsigned 32 bits integer\n\t * @constructor\n\t * @param {Number|String|Number} low bits     | integer as a string \t\t | integer as a number\n\t * @param {Number|Number|Undefined} high bits | radix (optional, default=10)\n\t * @return \n\t */\n\tfunction UINT32 (l, h) {\n\t\tif ( !(this instanceof UINT32) )\n\t\t\treturn new UINT32(l, h)\n\n\t\tthis._low = 0\n\t\tthis._high = 0\n\t\tthis.remainder = null\n\t\tif (typeof h == 'undefined')\n\t\t\treturn fromNumber.call(this, l)\n\n\t\tif (typeof l == 'string')\n\t\t\treturn fromString.call(this, l, h)\n\n\t\tfromBits.call(this, l, h)\n\t}\n\n\t/**\n\t * Set the current _UINT32_ object with its low and high bits\n\t * @method fromBits\n\t * @param {Number} low bits\n\t * @param {Number} high bits\n\t * @return ThisExpression\n\t */\n\tfunction fromBits (l, h) {\n\t\tthis._low = l | 0\n\t\tthis._high = h | 0\n\n\t\treturn this\n\t}\n\tUINT32.prototype.fromBits = fromBits\n\n\t/**\n\t * Set the current _UINT32_ object from a number\n\t * @method fromNumber\n\t * @param {Number} number\n\t * @return ThisExpression\n\t */\n\tfunction fromNumber (value) {\n\t\tthis._low = value & 0xFFFF\n\t\tthis._high = value >>> 16\n\n\t\treturn this\n\t}\n\tUINT32.prototype.fromNumber = fromNumber\n\n\t/**\n\t * Set the current _UINT32_ object from a string\n\t * @method fromString\n\t * @param {String} integer as a string\n\t * @param {Number} radix (optional, default=10)\n\t * @return ThisExpression\n\t */\n\tfunction fromString (s, radix) {\n\t\tvar value = parseInt(s, radix || 10)\n\n\t\tthis._low = value & 0xFFFF\n\t\tthis._high = value >>> 16\n\n\t\treturn this\n\t}\n\tUINT32.prototype.fromString = fromString\n\n\t/**\n\t * Convert this _UINT32_ to a number\n\t * @method toNumber\n\t * @return {Number} the converted UINT32\n\t */\n\tUINT32.prototype.toNumber = function () {\n\t\treturn (this._high * 65536) + this._low\n\t}\n\n\t/**\n\t * Convert this _UINT32_ to a string\n\t * @method toString\n\t * @param {Number} radix (optional, default=10)\n\t * @return {String} the converted UINT32\n\t */\n\tUINT32.prototype.toString = function (radix) {\n\t\treturn this.toNumber().toString(radix || 10)\n\t}\n\n\t/**\n\t * Add two _UINT32_. The current _UINT32_ stores the result\n\t * @method add\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.add = function (other) {\n\t\tvar a00 = this._low + other._low\n\t\tvar a16 = a00 >>> 16\n\n\t\ta16 += this._high + other._high\n\n\t\tthis._low = a00 & 0xFFFF\n\t\tthis._high = a16 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Subtract two _UINT32_. The current _UINT32_ stores the result\n\t * @method subtract\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.subtract = function (other) {\n\t\t//TODO inline\n\t\treturn this.add( other.clone().negate() )\n\t}\n\n\t/**\n\t * Multiply two _UINT32_. The current _UINT32_ stores the result\n\t * @method multiply\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.multiply = function (other) {\n\t\t/*\n\t\t\ta = a00 + a16\n\t\t\tb = b00 + b16\n\t\t\ta*b = (a00 + a16)(b00 + b16)\n\t\t\t\t= a00b00 + a00b16 + a16b00 + a16b16\n\n\t\t\ta16b16 overflows the 32bits\n\t\t */\n\t\tvar a16 = this._high\n\t\tvar a00 = this._low\n\t\tvar b16 = other._high\n\t\tvar b00 = other._low\n\n/* Removed to increase speed under normal circumstances (i.e. not multiplying by 0 or 1)\n\t\t// this == 0 or other == 1: nothing to do\n\t\tif ((a00 == 0 && a16 == 0) || (b00 == 1 && b16 == 0)) return this\n\n\t\t// other == 0 or this == 1: this = other\n\t\tif ((b00 == 0 && b16 == 0) || (a00 == 1 && a16 == 0)) {\n\t\t\tthis._low = other._low\n\t\t\tthis._high = other._high\n\t\t\treturn this\n\t\t}\n*/\n\n\t\tvar c16, c00\n\t\tc00 = a00 * b00\n\t\tc16 = c00 >>> 16\n\n\t\tc16 += a16 * b00\n\t\tc16 &= 0xFFFF\t\t// Not required but improves performance\n\t\tc16 += a00 * b16\n\n\t\tthis._low = c00 & 0xFFFF\n\t\tthis._high = c16 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Divide two _UINT32_. The current _UINT32_ stores the result.\n\t * The remainder is made available as the _remainder_ property on\n\t * the _UINT32_ object. It can be null, meaning there are no remainder.\n\t * @method div\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.div = function (other) {\n\t\tif ( (other._low == 0) && (other._high == 0) ) throw Error('division by zero')\n\n\t\t// other == 1\n\t\tif (other._high == 0 && other._low == 1) {\n\t\t\tthis.remainder = new UINT32(0)\n\t\t\treturn this\n\t\t}\n\n\t\t// other > this: 0\n\t\tif ( other.gt(this) ) {\n\t\t\tthis.remainder = this.clone()\n\t\t\tthis._low = 0\n\t\t\tthis._high = 0\n\t\t\treturn this\n\t\t}\n\t\t// other == this: 1\n\t\tif ( this.eq(other) ) {\n\t\t\tthis.remainder = new UINT32(0)\n\t\t\tthis._low = 1\n\t\t\tthis._high = 0\n\t\t\treturn this\n\t\t}\n\n\t\t// Shift the divisor left until it is higher than the dividend\n\t\tvar _other = other.clone()\n\t\tvar i = -1\n\t\twhile ( !this.lt(_other) ) {\n\t\t\t// High bit can overflow the default 16bits\n\t\t\t// Its ok since we right shift after this loop\n\t\t\t// The overflown bit must be kept though\n\t\t\t_other.shiftLeft(1, true)\n\t\t\ti++\n\t\t}\n\n\t\t// Set the remainder\n\t\tthis.remainder = this.clone()\n\t\t// Initialize the current result to 0\n\t\tthis._low = 0\n\t\tthis._high = 0\n\t\tfor (; i >= 0; i--) {\n\t\t\t_other.shiftRight(1)\n\t\t\t// If shifted divisor is smaller than the dividend\n\t\t\t// then subtract it from the dividend\n\t\t\tif ( !this.remainder.lt(_other) ) {\n\t\t\t\tthis.remainder.subtract(_other)\n\t\t\t\t// Update the current result\n\t\t\t\tif (i >= 16) {\n\t\t\t\t\tthis._high |= 1 << (i - 16)\n\t\t\t\t} else {\n\t\t\t\t\tthis._low |= 1 << i\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Negate the current _UINT32_\n\t * @method negate\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.negate = function () {\n\t\tvar v = ( ~this._low & 0xFFFF ) + 1\n\t\tthis._low = v & 0xFFFF\n\t\tthis._high = (~this._high + (v >>> 16)) & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Equals\n\t * @method eq\n\t * @param {Object} other UINT32\n\t * @return {Boolean}\n\t */\n\tUINT32.prototype.equals = UINT32.prototype.eq = function (other) {\n\t\treturn (this._low == other._low) && (this._high == other._high)\n\t}\n\n\t/**\n\t * Greater than (strict)\n\t * @method gt\n\t * @param {Object} other UINT32\n\t * @return {Boolean}\n\t */\n\tUINT32.prototype.greaterThan = UINT32.prototype.gt = function (other) {\n\t\tif (this._high > other._high) return true\n\t\tif (this._high < other._high) return false\n\t\treturn this._low > other._low\n\t}\n\n\t/**\n\t * Less than (strict)\n\t * @method lt\n\t * @param {Object} other UINT32\n\t * @return {Boolean}\n\t */\n\tUINT32.prototype.lessThan = UINT32.prototype.lt = function (other) {\n\t\tif (this._high < other._high) return true\n\t\tif (this._high > other._high) return false\n\t\treturn this._low < other._low\n\t}\n\n\t/**\n\t * Bitwise OR\n\t * @method or\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.or = function (other) {\n\t\tthis._low |= other._low\n\t\tthis._high |= other._high\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise AND\n\t * @method and\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.and = function (other) {\n\t\tthis._low &= other._low\n\t\tthis._high &= other._high\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise NOT\n\t * @method not\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.not = function() {\n\t\tthis._low = ~this._low & 0xFFFF\n\t\tthis._high = ~this._high & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise XOR\n\t * @method xor\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.xor = function (other) {\n\t\tthis._low ^= other._low\n\t\tthis._high ^= other._high\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise shift right\n\t * @method shiftRight\n\t * @param {Number} number of bits to shift\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.shiftRight = UINT32.prototype.shiftr = function (n) {\n\t\tif (n > 16) {\n\t\t\tthis._low = this._high >> (n - 16)\n\t\t\tthis._high = 0\n\t\t} else if (n == 16) {\n\t\t\tthis._low = this._high\n\t\t\tthis._high = 0\n\t\t} else {\n\t\t\tthis._low = (this._low >> n) | ( (this._high << (16-n)) & 0xFFFF )\n\t\t\tthis._high >>= n\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise shift left\n\t * @method shiftLeft\n\t * @param {Number} number of bits to shift\n\t * @param {Boolean} allow overflow\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.shiftLeft = UINT32.prototype.shiftl = function (n, allowOverflow) {\n\t\tif (n > 16) {\n\t\t\tthis._high = this._low << (n - 16)\n\t\t\tthis._low = 0\n\t\t\tif (!allowOverflow) {\n\t\t\t\tthis._high &= 0xFFFF\n\t\t\t}\n\t\t} else if (n == 16) {\n\t\t\tthis._high = this._low\n\t\t\tthis._low = 0\n\t\t} else {\n\t\t\tthis._high = (this._high << n) | (this._low >> (16-n))\n\t\t\tthis._low = (this._low << n) & 0xFFFF\n\t\t\tif (!allowOverflow) {\n\t\t\t\t// Overflow only allowed on the high bits...\n\t\t\t\tthis._high &= 0xFFFF\n\t\t\t}\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise rotate left\n\t * @method rotl\n\t * @param {Number} number of bits to rotate\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.rotateLeft = UINT32.prototype.rotl = function (n) {\n\t\tvar v = (this._high << 16) | this._low\n\t\tv = (v << n) | (v >>> (32 - n))\n\t\tthis._low = v & 0xFFFF\n\t\tthis._high = v >>> 16\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise rotate right\n\t * @method rotr\n\t * @param {Number} number of bits to rotate\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.rotateRight = UINT32.prototype.rotr = function (n) {\n\t\tvar v = (this._high << 16) | this._low\n\t\tv = (v >>> n) | (v << (32 - n))\n\t\tthis._low = v & 0xFFFF\n\t\tthis._high = v >>> 16\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Clone the current _UINT32_\n\t * @method clone\n\t * @return {Object} cloned UINT32\n\t */\n\tUINT32.prototype.clone = function () {\n\t\treturn new UINT32(this._low, this._high)\n\t}\n\n\tif (typeof define != 'undefined' && define.amd) {\n\t\t// AMD / RequireJS\n\t\tdefine([], function () {\n\t\t\treturn UINT32\n\t\t})\n\t} else if (typeof module != 'undefined' && module.exports) {\n\t\t// Node.js\n\t\tmodule.exports = UINT32\n\t} else {\n\t\t// Browser\n\t\troot['UINT32'] = UINT32\n\t}\n\n})(this)\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":412,"column":0},"generated":{"line":413,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":413,"column":0},"generated":{"line":414,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":414,"column":0},"generated":{"line":415,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":415,"column":0},"generated":{"line":416,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":416,"column":0},"generated":{"line":417,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":417,"column":0},"generated":{"line":418,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":418,"column":0},"generated":{"line":419,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":419,"column":0},"generated":{"line":420,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":420,"column":0},"generated":{"line":421,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":421,"column":0},"generated":{"line":422,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":422,"column":0},"generated":{"line":423,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":423,"column":0},"generated":{"line":424,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":424,"column":0},"generated":{"line":425,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":425,"column":0},"generated":{"line":426,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":426,"column":0},"generated":{"line":427,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":427,"column":0},"generated":{"line":428,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":428,"column":0},"generated":{"line":429,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":429,"column":0},"generated":{"line":430,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":430,"column":0},"generated":{"line":431,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":431,"column":0},"generated":{"line":432,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":432,"column":0},"generated":{"line":433,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":433,"column":0},"generated":{"line":434,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":434,"column":0},"generated":{"line":435,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":435,"column":0},"generated":{"line":436,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":436,"column":0},"generated":{"line":437,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":437,"column":0},"generated":{"line":438,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":438,"column":0},"generated":{"line":439,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":439,"column":0},"generated":{"line":440,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":440,"column":0},"generated":{"line":441,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":441,"column":0},"generated":{"line":442,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":442,"column":0},"generated":{"line":443,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":443,"column":0},"generated":{"line":444,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":444,"column":0},"generated":{"line":445,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":445,"column":0},"generated":{"line":446,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":446,"column":0},"generated":{"line":447,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":447,"column":0},"generated":{"line":448,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":448,"column":0},"generated":{"line":449,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":449,"column":0},"generated":{"line":450,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":450,"column":0},"generated":{"line":451,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":451,"column":0},"generated":{"line":452,"column":0}},{"source":"../../../node_modules/cuint/lib/uint32.js","original":{"line":452,"column":0},"generated":{"line":453,"column":0}}],"sources":{"../../../node_modules/cuint/lib/uint32.js":"/**\n\tC-like unsigned 32 bits integers in Javascript\n\tCopyright (C) 2013, Pierre Curto\n\tMIT license\n */\n;(function (root) {\n\n\t// Local cache for typical radices\n\tvar radixPowerCache = {\n\t\t36: UINT32( Math.pow(36, 5) )\n\t,\t16: UINT32( Math.pow(16, 7) )\n\t,\t10: UINT32( Math.pow(10, 9) )\n\t,\t2:  UINT32( Math.pow(2, 30) )\n\t}\n\tvar radixCache = {\n\t\t36: UINT32(36)\n\t,\t16: UINT32(16)\n\t,\t10: UINT32(10)\n\t,\t2:  UINT32(2)\n\t}\n\n\t/**\n\t *\tRepresents an unsigned 32 bits integer\n\t * @constructor\n\t * @param {Number|String|Number} low bits     | integer as a string \t\t | integer as a number\n\t * @param {Number|Number|Undefined} high bits | radix (optional, default=10)\n\t * @return \n\t */\n\tfunction UINT32 (l, h) {\n\t\tif ( !(this instanceof UINT32) )\n\t\t\treturn new UINT32(l, h)\n\n\t\tthis._low = 0\n\t\tthis._high = 0\n\t\tthis.remainder = null\n\t\tif (typeof h == 'undefined')\n\t\t\treturn fromNumber.call(this, l)\n\n\t\tif (typeof l == 'string')\n\t\t\treturn fromString.call(this, l, h)\n\n\t\tfromBits.call(this, l, h)\n\t}\n\n\t/**\n\t * Set the current _UINT32_ object with its low and high bits\n\t * @method fromBits\n\t * @param {Number} low bits\n\t * @param {Number} high bits\n\t * @return ThisExpression\n\t */\n\tfunction fromBits (l, h) {\n\t\tthis._low = l | 0\n\t\tthis._high = h | 0\n\n\t\treturn this\n\t}\n\tUINT32.prototype.fromBits = fromBits\n\n\t/**\n\t * Set the current _UINT32_ object from a number\n\t * @method fromNumber\n\t * @param {Number} number\n\t * @return ThisExpression\n\t */\n\tfunction fromNumber (value) {\n\t\tthis._low = value & 0xFFFF\n\t\tthis._high = value >>> 16\n\n\t\treturn this\n\t}\n\tUINT32.prototype.fromNumber = fromNumber\n\n\t/**\n\t * Set the current _UINT32_ object from a string\n\t * @method fromString\n\t * @param {String} integer as a string\n\t * @param {Number} radix (optional, default=10)\n\t * @return ThisExpression\n\t */\n\tfunction fromString (s, radix) {\n\t\tvar value = parseInt(s, radix || 10)\n\n\t\tthis._low = value & 0xFFFF\n\t\tthis._high = value >>> 16\n\n\t\treturn this\n\t}\n\tUINT32.prototype.fromString = fromString\n\n\t/**\n\t * Convert this _UINT32_ to a number\n\t * @method toNumber\n\t * @return {Number} the converted UINT32\n\t */\n\tUINT32.prototype.toNumber = function () {\n\t\treturn (this._high * 65536) + this._low\n\t}\n\n\t/**\n\t * Convert this _UINT32_ to a string\n\t * @method toString\n\t * @param {Number} radix (optional, default=10)\n\t * @return {String} the converted UINT32\n\t */\n\tUINT32.prototype.toString = function (radix) {\n\t\treturn this.toNumber().toString(radix || 10)\n\t}\n\n\t/**\n\t * Add two _UINT32_. The current _UINT32_ stores the result\n\t * @method add\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.add = function (other) {\n\t\tvar a00 = this._low + other._low\n\t\tvar a16 = a00 >>> 16\n\n\t\ta16 += this._high + other._high\n\n\t\tthis._low = a00 & 0xFFFF\n\t\tthis._high = a16 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Subtract two _UINT32_. The current _UINT32_ stores the result\n\t * @method subtract\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.subtract = function (other) {\n\t\t//TODO inline\n\t\treturn this.add( other.clone().negate() )\n\t}\n\n\t/**\n\t * Multiply two _UINT32_. The current _UINT32_ stores the result\n\t * @method multiply\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.multiply = function (other) {\n\t\t/*\n\t\t\ta = a00 + a16\n\t\t\tb = b00 + b16\n\t\t\ta*b = (a00 + a16)(b00 + b16)\n\t\t\t\t= a00b00 + a00b16 + a16b00 + a16b16\n\n\t\t\ta16b16 overflows the 32bits\n\t\t */\n\t\tvar a16 = this._high\n\t\tvar a00 = this._low\n\t\tvar b16 = other._high\n\t\tvar b00 = other._low\n\n/* Removed to increase speed under normal circumstances (i.e. not multiplying by 0 or 1)\n\t\t// this == 0 or other == 1: nothing to do\n\t\tif ((a00 == 0 && a16 == 0) || (b00 == 1 && b16 == 0)) return this\n\n\t\t// other == 0 or this == 1: this = other\n\t\tif ((b00 == 0 && b16 == 0) || (a00 == 1 && a16 == 0)) {\n\t\t\tthis._low = other._low\n\t\t\tthis._high = other._high\n\t\t\treturn this\n\t\t}\n*/\n\n\t\tvar c16, c00\n\t\tc00 = a00 * b00\n\t\tc16 = c00 >>> 16\n\n\t\tc16 += a16 * b00\n\t\tc16 &= 0xFFFF\t\t// Not required but improves performance\n\t\tc16 += a00 * b16\n\n\t\tthis._low = c00 & 0xFFFF\n\t\tthis._high = c16 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Divide two _UINT32_. The current _UINT32_ stores the result.\n\t * The remainder is made available as the _remainder_ property on\n\t * the _UINT32_ object. It can be null, meaning there are no remainder.\n\t * @method div\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.div = function (other) {\n\t\tif ( (other._low == 0) && (other._high == 0) ) throw Error('division by zero')\n\n\t\t// other == 1\n\t\tif (other._high == 0 && other._low == 1) {\n\t\t\tthis.remainder = new UINT32(0)\n\t\t\treturn this\n\t\t}\n\n\t\t// other > this: 0\n\t\tif ( other.gt(this) ) {\n\t\t\tthis.remainder = this.clone()\n\t\t\tthis._low = 0\n\t\t\tthis._high = 0\n\t\t\treturn this\n\t\t}\n\t\t// other == this: 1\n\t\tif ( this.eq(other) ) {\n\t\t\tthis.remainder = new UINT32(0)\n\t\t\tthis._low = 1\n\t\t\tthis._high = 0\n\t\t\treturn this\n\t\t}\n\n\t\t// Shift the divisor left until it is higher than the dividend\n\t\tvar _other = other.clone()\n\t\tvar i = -1\n\t\twhile ( !this.lt(_other) ) {\n\t\t\t// High bit can overflow the default 16bits\n\t\t\t// Its ok since we right shift after this loop\n\t\t\t// The overflown bit must be kept though\n\t\t\t_other.shiftLeft(1, true)\n\t\t\ti++\n\t\t}\n\n\t\t// Set the remainder\n\t\tthis.remainder = this.clone()\n\t\t// Initialize the current result to 0\n\t\tthis._low = 0\n\t\tthis._high = 0\n\t\tfor (; i >= 0; i--) {\n\t\t\t_other.shiftRight(1)\n\t\t\t// If shifted divisor is smaller than the dividend\n\t\t\t// then subtract it from the dividend\n\t\t\tif ( !this.remainder.lt(_other) ) {\n\t\t\t\tthis.remainder.subtract(_other)\n\t\t\t\t// Update the current result\n\t\t\t\tif (i >= 16) {\n\t\t\t\t\tthis._high |= 1 << (i - 16)\n\t\t\t\t} else {\n\t\t\t\t\tthis._low |= 1 << i\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Negate the current _UINT32_\n\t * @method negate\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.negate = function () {\n\t\tvar v = ( ~this._low & 0xFFFF ) + 1\n\t\tthis._low = v & 0xFFFF\n\t\tthis._high = (~this._high + (v >>> 16)) & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Equals\n\t * @method eq\n\t * @param {Object} other UINT32\n\t * @return {Boolean}\n\t */\n\tUINT32.prototype.equals = UINT32.prototype.eq = function (other) {\n\t\treturn (this._low == other._low) && (this._high == other._high)\n\t}\n\n\t/**\n\t * Greater than (strict)\n\t * @method gt\n\t * @param {Object} other UINT32\n\t * @return {Boolean}\n\t */\n\tUINT32.prototype.greaterThan = UINT32.prototype.gt = function (other) {\n\t\tif (this._high > other._high) return true\n\t\tif (this._high < other._high) return false\n\t\treturn this._low > other._low\n\t}\n\n\t/**\n\t * Less than (strict)\n\t * @method lt\n\t * @param {Object} other UINT32\n\t * @return {Boolean}\n\t */\n\tUINT32.prototype.lessThan = UINT32.prototype.lt = function (other) {\n\t\tif (this._high < other._high) return true\n\t\tif (this._high > other._high) return false\n\t\treturn this._low < other._low\n\t}\n\n\t/**\n\t * Bitwise OR\n\t * @method or\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.or = function (other) {\n\t\tthis._low |= other._low\n\t\tthis._high |= other._high\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise AND\n\t * @method and\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.and = function (other) {\n\t\tthis._low &= other._low\n\t\tthis._high &= other._high\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise NOT\n\t * @method not\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.not = function() {\n\t\tthis._low = ~this._low & 0xFFFF\n\t\tthis._high = ~this._high & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise XOR\n\t * @method xor\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.xor = function (other) {\n\t\tthis._low ^= other._low\n\t\tthis._high ^= other._high\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise shift right\n\t * @method shiftRight\n\t * @param {Number} number of bits to shift\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.shiftRight = UINT32.prototype.shiftr = function (n) {\n\t\tif (n > 16) {\n\t\t\tthis._low = this._high >> (n - 16)\n\t\t\tthis._high = 0\n\t\t} else if (n == 16) {\n\t\t\tthis._low = this._high\n\t\t\tthis._high = 0\n\t\t} else {\n\t\t\tthis._low = (this._low >> n) | ( (this._high << (16-n)) & 0xFFFF )\n\t\t\tthis._high >>= n\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise shift left\n\t * @method shiftLeft\n\t * @param {Number} number of bits to shift\n\t * @param {Boolean} allow overflow\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.shiftLeft = UINT32.prototype.shiftl = function (n, allowOverflow) {\n\t\tif (n > 16) {\n\t\t\tthis._high = this._low << (n - 16)\n\t\t\tthis._low = 0\n\t\t\tif (!allowOverflow) {\n\t\t\t\tthis._high &= 0xFFFF\n\t\t\t}\n\t\t} else if (n == 16) {\n\t\t\tthis._high = this._low\n\t\t\tthis._low = 0\n\t\t} else {\n\t\t\tthis._high = (this._high << n) | (this._low >> (16-n))\n\t\t\tthis._low = (this._low << n) & 0xFFFF\n\t\t\tif (!allowOverflow) {\n\t\t\t\t// Overflow only allowed on the high bits...\n\t\t\t\tthis._high &= 0xFFFF\n\t\t\t}\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise rotate left\n\t * @method rotl\n\t * @param {Number} number of bits to rotate\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.rotateLeft = UINT32.prototype.rotl = function (n) {\n\t\tvar v = (this._high << 16) | this._low\n\t\tv = (v << n) | (v >>> (32 - n))\n\t\tthis._low = v & 0xFFFF\n\t\tthis._high = v >>> 16\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise rotate right\n\t * @method rotr\n\t * @param {Number} number of bits to rotate\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.rotateRight = UINT32.prototype.rotr = function (n) {\n\t\tvar v = (this._high << 16) | this._low\n\t\tv = (v >>> n) | (v << (32 - n))\n\t\tthis._low = v & 0xFFFF\n\t\tthis._high = v >>> 16\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Clone the current _UINT32_\n\t * @method clone\n\t * @return {Object} cloned UINT32\n\t */\n\tUINT32.prototype.clone = function () {\n\t\treturn new UINT32(this._low, this._high)\n\t}\n\n\tif (typeof define != 'undefined' && define.amd) {\n\t\t// AMD / RequireJS\n\t\tdefine([], function () {\n\t\t\treturn UINT32\n\t\t})\n\t} else if (typeof module != 'undefined' && module.exports) {\n\t\t// Node.js\n\t\tmodule.exports = UINT32\n\t} else {\n\t\t// Browser\n\t\troot['UINT32'] = UINT32\n\t}\n\n})(this)\n"},"lineCount":453}},"error":null,"hash":"efdfb8e46092fdc481e730f79d5b097d","cacheData":{"env":{}}}