{"id":"../../../node_modules/@polkadot/util/assert.mjs","dependencies":[{"name":"C:\\Users\\brett\\Workspace\\hackathon\\encode\\aurum_wallet\\package.json","includedInParent":true,"mtime":1610473604000},{"name":"C:\\Users\\brett\\Workspace\\hackathon\\encode\\aurum_wallet\\node_modules\\@polkadot\\util\\package.json","includedInParent":true,"mtime":1610722452294},{"name":"./is/function.mjs","loc":{"line":3,"column":27},"parent":"C:\\Users\\brett\\Workspace\\hackathon\\encode\\aurum_wallet\\node_modules\\@polkadot\\util\\assert.mjs","resolved":"C:\\Users\\brett\\Workspace\\hackathon\\encode\\aurum_wallet\\node_modules\\@polkadot\\util\\is\\function.mjs"},{"name":"./is/undefined.mjs","loc":{"line":4,"column":28},"parent":"C:\\Users\\brett\\Workspace\\hackathon\\encode\\aurum_wallet\\node_modules\\@polkadot\\util\\assert.mjs","resolved":"C:\\Users\\brett\\Workspace\\hackathon\\encode\\aurum_wallet\\node_modules\\@polkadot\\util\\is\\undefined.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assert = assert;\nexports.assertReturn = assertReturn;\n\nvar _function = require(\"./is/function.mjs\");\n\nvar _undefined = require(\"./is/undefined.mjs\");\n\n// Copyright 2017-2020 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name assert\n * @summary Checks for a valid test, if not Error is thrown.\n * @description\n * Checks that `test` is a truthy value. If value is falsy (`null`, `undefined`, `false`, ...), it throws an Error with the supplied `message`. When `test` passes, `true` is returned.\n * @example\n * <BR>\n *\n * ```javascript\n * const { assert } from '@polkadot/util';\n *\n * assert(true, 'True should be true'); // passes\n * assert(false, 'False should not be true'); // Error thrown\n * assert(false, () => 'message'); // Error with 'message'\n * ```\n */\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error((0, _function.isFunction)(message) ? message() : message);\n  }\n}\n/**\n * @name assertReturn\n * @summart Returns when the value is not undefined, otherwise throws assertion error\n */\n\n\nfunction assertReturn(value, message) {\n  assert(!(0, _undefined.isUndefined)(value), message);\n  return value;\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":9,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":4,"column":0}},{"generated":{"line":13,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":1,"column":0}},{"generated":{"line":14,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":2,"column":0}},{"generated":{"line":16,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":6,"column":0}},{"generated":{"line":17,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":7,"column":0}},{"generated":{"line":18,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":8,"column":0}},{"generated":{"line":19,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":9,"column":0}},{"generated":{"line":20,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":10,"column":0}},{"generated":{"line":21,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":11,"column":0}},{"generated":{"line":22,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":12,"column":0}},{"generated":{"line":23,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":13,"column":0}},{"generated":{"line":24,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":14,"column":0}},{"generated":{"line":25,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":15,"column":0}},{"generated":{"line":26,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":16,"column":0}},{"generated":{"line":27,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":17,"column":0}},{"generated":{"line":28,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":18,"column":0}},{"generated":{"line":29,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":19,"column":0}},{"generated":{"line":30,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":20,"column":0}},{"generated":{"line":31,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":21,"column":0}},{"generated":{"line":32,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":22,"column":7}},{"name":"assert","generated":{"line":32,"column":9},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":22,"column":16}},{"generated":{"line":32,"column":15},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":22,"column":7}},{"name":"condition","generated":{"line":32,"column":16},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":22,"column":23}},{"generated":{"line":32,"column":25},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":22,"column":7}},{"name":"message","generated":{"line":32,"column":27},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":22,"column":34}},{"generated":{"line":32,"column":34},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":22,"column":7}},{"generated":{"line":32,"column":36},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":22,"column":43}},{"generated":{"line":33,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":23,"column":2}},{"generated":{"line":33,"column":6},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":23,"column":6}},{"name":"condition","generated":{"line":33,"column":7},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":23,"column":7}},{"generated":{"line":33,"column":16},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":23,"column":2}},{"generated":{"line":33,"column":18},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":23,"column":18}},{"generated":{"line":34,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":24,"column":4}},{"generated":{"line":34,"column":10},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":24,"column":10}},{"name":"Error","generated":{"line":34,"column":14},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":24,"column":14}},{"generated":{"line":34,"column":19},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":24,"column":10}},{"generated":{"line":34,"column":20},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":24,"column":20}},{"name":"message","generated":{"line":34,"column":46},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":24,"column":31}},{"generated":{"line":34,"column":53},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":24,"column":20}},{"name":"message","generated":{"line":34,"column":57},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":24,"column":42}},{"generated":{"line":34,"column":64},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":24,"column":49}},{"generated":{"line":34,"column":66},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":24,"column":20}},{"name":"message","generated":{"line":34,"column":69},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":24,"column":54}},{"generated":{"line":34,"column":76},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":24,"column":10}},{"generated":{"line":34,"column":77},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":24,"column":4}},{"generated":{"line":35,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":25,"column":3}},{"generated":{"line":36,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":26,"column":1}},{"generated":{"line":37,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":27,"column":0}},{"generated":{"line":38,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":28,"column":0}},{"generated":{"line":39,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":29,"column":0}},{"generated":{"line":40,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":30,"column":0}},{"generated":{"line":43,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":32,"column":7}},{"name":"assertReturn","generated":{"line":43,"column":9},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":32,"column":16}},{"generated":{"line":43,"column":21},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":32,"column":7}},{"name":"value","generated":{"line":43,"column":22},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":32,"column":29}},{"generated":{"line":43,"column":27},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":32,"column":7}},{"name":"message","generated":{"line":43,"column":29},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":32,"column":36}},{"generated":{"line":43,"column":36},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":32,"column":7}},{"generated":{"line":43,"column":38},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":32,"column":45}},{"name":"assert","generated":{"line":44,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":33,"column":2}},{"name":"assert","generated":{"line":44,"column":2},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":33,"column":2}},{"generated":{"line":44,"column":8},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":33,"column":8}},{"generated":{"line":44,"column":9},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":33,"column":9}},{"generated":{"line":44,"column":10},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":33,"column":10}},{"name":"value","generated":{"line":44,"column":38},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":33,"column":22}},{"generated":{"line":44,"column":43},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":33,"column":10}},{"generated":{"line":44,"column":44},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":33,"column":8}},{"name":"message","generated":{"line":44,"column":46},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":33,"column":30}},{"generated":{"line":44,"column":53},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":33,"column":8}},{"generated":{"line":44,"column":54},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":33,"column":2}},{"generated":{"line":45,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":34,"column":2}},{"name":"value","generated":{"line":45,"column":9},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":34,"column":9}},{"generated":{"line":45,"column":14},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":34,"column":2}},{"generated":{"line":46,"column":0},"source":"../../../node_modules/@polkadot/util/assert.mjs","original":{"line":35,"column":1}}],"sources":{"../../../node_modules/@polkadot/util/assert.mjs":"// Copyright 2017-2020 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isFunction } from \"./is/function.mjs\";\nimport { isUndefined } from \"./is/undefined.mjs\";\n\n/**\n * @name assert\n * @summary Checks for a valid test, if not Error is thrown.\n * @description\n * Checks that `test` is a truthy value. If value is falsy (`null`, `undefined`, `false`, ...), it throws an Error with the supplied `message`. When `test` passes, `true` is returned.\n * @example\n * <BR>\n *\n * ```javascript\n * const { assert } from '@polkadot/util';\n *\n * assert(true, 'True should be true'); // passes\n * assert(false, 'False should not be true'); // Error thrown\n * assert(false, () => 'message'); // Error with 'message'\n * ```\n */\nexport function assert(condition, message) {\n  if (!condition) {\n    throw new Error(isFunction(message) ? message() : message);\n  }\n}\n/**\n * @name assertReturn\n * @summart Returns when the value is not undefined, otherwise throws assertion error\n */\n\nexport function assertReturn(value, message) {\n  assert(!isUndefined(value), message);\n  return value;\n}"},"lineCount":null}},"error":null,"hash":"30f0d2d025a1a699620b750b1af963df","cacheData":{"env":{}}}